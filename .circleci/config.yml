version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  snyk: snyk/snyk@1.5.0
  # heroku: circleci/heroku@2.0.0
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies..."
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests..."
          npm run test

  scan:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - checkout
      - snyk/install
      - run:
          name: Docker Login (secure)
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_LOGIN" --password-stdin
      - run:
          name: Build Docker Image
          command: docker build -t leonicus/test_repository .
      - snyk/scan:
          docker-image-name: leonicus/test_repository
          fail-on-issues: false
          severity-threshold: high

  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKER_LOGIN  # DOCKER_LOGIN is the default value, if it exists, it automatically would be used.
          docker-password: DOCKER_PASSWORD  # DOCKER_PASSWORD is the default value
      - docker/build:
          image: leonicus/test_repository
      - docker/push:
          image: leonicus/test_repository
  # deploy:
  #   docker:
  #     - image: cimg/node:16.10
  #   steps:
  #     - setup_remote_docker      
  #     - heroku/install
  #     - checkout
  #     - run:
  #         name: Heroku Container Push
  #         command: | 
  #             heroku container:login
  #             heroku stack:set container -a shennan-su-devops
  #             heroku container:push web -a shennan-su-devops
  #             heroku container:release web -a shennan-su-devops

workflows:
  simple_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - scan:
          requires:
            - build
      - publish:
          requires:
            - test
      # - deploy:
      #     requires:
      #       - publish